name: 'Publish'
on:
  push:
    branches:
      - release
env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_id: ${{ steps.release.outputs.id }}
    steps:
      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAVO_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: Build and Upload Release Asset
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    needs: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Cargo Install
        run: |
          rustup upgrade
          cargo install tauri-cli
          cargo install trunk
          rustup target add wasm32-unknown-unknown

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.PAVO_TOKEN }}
        with:
          tagName: 'v__VERSION__' # This only works if your workflow triggers on new tags.
          releaseName: 'Pavo v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: 'See the assets to download and install this version.'
          releaseId: ${{ needs.release.outputs.release_id }}
          releaseDraft: false
          prerelease: true

  update_json:
    needs: release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Node.js Env
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Create file
        working-directory: ./
        env:
          GITHUB_TOKEN: ${{ secrets.PAVO_TOKEN }}
        run: |
          node ./scripts/updater.mjs --info ${{ needs.release.outputs }}
